C51 COMPILER V9.59.0.0   OSAL                                                              03/03/2021 16:23:05 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE OSAL
OBJECT MODULE PLACED IN .\OBJ\OSAL.obj
COMPILER INVOKED BY: D:\sofeware\Keil\Keil5_MDK\C51\BIN\C51.EXE LIB\OSAL\OSAL.c OPTIMIZE(9,SPEED) BROWSE INCDIR(.\USER;.
                    -\LIB\Data;.\LIB\eeprom;.\LIB\FunctionOS;.\LIB\OSAL;.\LIB\Scan;.\LIB\SEG;.\LIB\Tick;.\LIB\H;.\LIB\M_IO;.\LIB\M_Math;.\LIB
                    -\DATAST;.\LIB\IIC;.\USER\Mode;.\USER\Scankey;.\USER\Main;.\LIB\SYS) DEBUG OBJECTEXTEND PRINT(.\Listings\OSAL.lst) TABS(2
                    -) OBJECT(.\OBJ\OSAL.obj)

line level    source

   1          /*
   2          *                           ___________
   3          *                         /            \
   4          *                        \____________/
   5          *                        |           |
   6          *                       /            \
   7          *                     /              \
   8          *                    |               |
   9          *                   |               |
  10          *                  |----------_----|
  11          *                 |   --   -      |
  12          *                 \______________/
  13          *                 -----------------  
  14          */
  15          #include "OSAL.h"
  16          /*
  17          该结构占用了定时器0用作任务轮询，但依旧可以用它来完成计时任务
  18          添加新任务时，需要在TASK_ENUM添加任务名
  19          struct OSL_struct _funtion[enum_max]中初始化任务
  20          
  21          *任务入口函数需要在头文件中引用
  22          */
  23          struct OSL_struct;
  24          uchar OSL_i,OSL_j;
  25          /*
  26          下转struct OSL_struct _funtion[enum_max]初始化任务
  27          */
  28          enum TASK_ENUM{
  29            enum_scankey,
  30            enum_seg,
  31            enum_mode,
  32            enum_save,
  33            enum_max
  34          };
  35          /*
  36          计数初始值
  37          计数最大值
  38          任务触发位
  39          函数指针 <函数需要在头文件中引用>
  40          */
  41          struct OSL_struct _funtion[enum_max]={
  42            {0,100,0,SCANKEY_OSU},
  43            {0,5,0,SEG_SET_OSU},
  44            {0,5,0,MODE_OSU},
  45            {0,10,0,DATA_SAVE}
  46          };
  47          /**/
  48          void t0(void) interrupt 1 
  49          {
  50   1        #if Tick_Ver==2
  51   1        uchar a;
  52   1        #endif
C51 COMPILER V9.59.0.0   OSAL                                                              03/03/2021 16:23:05 PAGE 2   

  53   1        WDT_CONTR=0x35;//喂狗
  54   1        #if Tick_Ver==2
  55   1        for(a=0;a<TICK_NUM;a++){  //遍历各路计时
  56   2          _SIM_ISR(a);      //考虑是否再开一个定时器中.........................................
  57   2        }
  58   1        #endif
  59   1        for(OSL_i=0;OSL_i<enum_max;OSL_i++){
  60   2          if(!_funtion[OSL_i].use_flag){
  61   3            if( _funtion[OSL_i].OSL_ALL_tick==(++_funtion[OSL_i].OSL_NOW_tick)){
  62   4              _funtion[OSL_i].OSL_NOW_tick=0;
  63   4              _funtion[OSL_i].use_flag=1;
  64   4            }
  65   3          }
  66   2        }
  67   1      }
  68          /**/
  69          void Timer0Init(void){     //1毫秒@11.0592MHz
  70   1        AUXR |= 0x80;   //定时器时钟1T模式
  71   1        TMOD &= 0xF0;   //设置定时器模式
  72   1        TL0 = 0xCD;   //设置定时初值
  73   1        TH0 = 0xD4;   //设置定时初值
  74   1        TF0 = 0;    //清除TF0标志
  75   1        TR0 = 1;    //定时器0开始计时
  76   1        ET0=1;
  77   1        EA=1;
  78   1        WDT_CONTR=0x35;//喂狗 
  79   1      }
  80          /**/
  81          void OSAL_INIT(){
  82   1        Timer0Init(); 
  83   1      }
  84          /**/
  85          void OSAL_FUNCTION(){
  86   1        while(1){
  87   2          for(OSL_j=0;OSL_j<enum_max;OSL_j++){
  88   3            if(_funtion[OSL_j].use_flag){
  89   4              _funtion[OSL_j].FUNCTION();
  90   4              _funtion[OSL_j].use_flag=0;
  91   4            }
  92   3          }
  93   2        }
  94   1      }
  95          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    263    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     38       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
